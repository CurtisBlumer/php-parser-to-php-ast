# Based on igbinary and php-ast's appveyor config.
# This tests against the latest stable minor version of PHP 7 (Currently 7.1)
# The project name is the same as the build id used, e.g. https://www.appveyor.com/docs/environment-variables/

version: '{branch}.{build}'
clone_folder: C:\projects\php-parser-to-php-ast
# Don't include full git history
clone_depth: 1
# Test 32-bit builds
platform: x86

branches:
  only:
    - master
    - 0.8
    - 0.9
    - php72

install:
- cmd: choco feature enable -n=allowGlobalConfirmation
- cmd: mkdir %APPVEYOR_BUILD_FOLDER%\bin
build_script:
- cmd: >-
    mkdir C:\projects\php

    cd C:\projects\php

    appveyor DownloadFile http://windows.php.net/downloads/releases/archives/php-7.1.9-nts-Win32-VC14-x86.zip

    7z x -y php-7.1.9-nts-Win32-VC14-x86.zip

    del /Q *.zip

    cd C:\projects\php\ext

    git clone --depth=1 --branch=master https://github.com/nikic/php-ast C:\projects\php-src\ext\ast

    appveyor DownloadFile http://windows.php.net/downloads/pecl/releases/ast/0.1.6/php_ast-0.1.6-7.1-nts-vc14-x86.zip

    7z x php_ast-0.1.6-7.1-nts-vc14-x86.zip php_ast.dll -y >nul

    cd C:\projects\php

    echo [PHP] > php.ini

    echo extension_dir = "ext" >> php.ini

    echo extension=php_ast.dll >> php.ini

    echo extension=php_curl.dll >> php.ini

    echo extension=php_intl.dll >> php.ini

    echo extension=php_mbstring.dll >> php.ini

    echo extension=php_openssl.dll >> php.ini

    echo extension=php_soap.dll >> php.ini

    SET PATH=c:\projects\php;%PATH%

    echo %PATH%

    php -v

    php -m

    cd C:\projects\php-parser-to-php-ast

    appveyor DownloadFile https://getcomposer.org/composer.phar

test_script:
- cmd: cd C:\projects\php-parser-to-php-ast
- cmd: php composer.phar install
# Analyze the project with phan, will error if 1 or more issues are detected
- cmd: .\vendor\bin\phan
# Run the remaining tests of this project
- cmd: .\vendor\bin\phpunit --verbose
